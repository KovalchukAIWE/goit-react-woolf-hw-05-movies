{"version":3,"file":"static/js/42.2501d6eb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","service/service-movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"MovieDetailsPage_image__oMCC0\",\"details\":\"MovieDetailsPage_details__pkcOH\",\"additionalInfo\":\"MovieDetailsPage_additionalInfo__MR4+w\",\"buttons\":\"MovieDetailsPage_buttons__UTiNS\",\"button\":\"MovieDetailsPage_button__mSHH6\"};","import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport noImage from '../../images/no-image.jpg';\nimport { getSingleMovieApi } from 'service/service-movies';\nimport styles from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDetailsData = async () => {\n      try {\n        setLoading(true);\n        const detailMovie = await getSingleMovieApi(movieId);\n        setMovieInfo(detailMovie);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetailsData();\n  }, [movieId]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (!movieInfo) {\n    return null;\n  }\n\n  const { title, release_date, overview, genres, poster_path, original_title } =\n    movieInfo;\n\n  const popularity = Math.round(movieInfo.vote_average * 10);\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <button className={styles.button} type=\"button\">\n          Go back\n        </button>\n      </Link>\n      <div className={styles.details}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `${noImage}`\n          }\n          alt={original_title}\n          className={styles.image}\n        />\n        <div>\n          <h1>\n            {title} ({release_date})\n          </h1>\n          <p>User score: {popularity}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <hr />\n\n      <div>\n        <h3 className={styles.additionalInfo}>Additional information</h3>\n        <ul className={styles.buttons}>\n          <li>\n            <Link to=\"cast\" className={styles.button}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" className={styles.button}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'dda59f4936591e74cda44d0ee157e8ca';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getAllMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getSingleMovieApi = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n"],"names":["_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","loading","setLoading","location","useLocation","useEffect","fetchMovieDetailsData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","detailMovie","_context","prev","next","getSingleMovieApi","sent","t0","console","error","finish","stop","apply","arguments","_jsx","Loader","title","release_date","overview","genres","poster_path","original_title","popularity","Math","round","vote_average","_jsxs","_Fragment","children","Link","to","state","from","className","styles","type","src","concat","noImage","alt","map","genre","name","id","Outlet","API_KEY","BASE_URL","getAllMovies","response","axios","abrupt","data","results","getSearchMovies","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2","getMovieCast","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}