{"version":3,"file":"static/js/76.c42ad86e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","service/service-movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castWrapper\":\"Cast_castWrapper__Arm-x\",\"castCard\":\"Cast_castCard__m8Shz\",\"castImage\":\"Cast_castImage__d8bQP\",\"castName\":\"Cast_castName__-i08u\"};","import React, { useEffect, useState } from 'react';\nimport styles from './Cast.module.css';\nimport defaultImage from '../../images/no-image.jpg';\nimport { getMovieCast } from 'service/service-movies';\nimport Loader from 'components/Loader/Loader';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchActorsOfMovie = async () => {\n      try {\n        setLoading(true);\n        const actorsData = await getMovieCast(movieId);\n        setActors(actorsData);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <div>{loading && <Loader />}</div>\n      <ul className={styles.castWrapper}>\n        {actors.map(({ id, profile_path, name, character }) => (\n          <li key={id} className={styles.castCard}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : defaultImage\n              }\n              alt={profile_path ? name : 'noimage'}\n              className={styles.castImage}\n            />\n            <p className={styles.castName}>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'dda59f4936591e74cda44d0ee157e8ca';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getAllMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getSingleMovieApi = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","loading","setLoading","useEffect","fetchActorsOfMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","actorsData","_context","prev","next","getMovieCast","sent","t0","console","error","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","className","styles","map","_ref2","id","profile_path","name","character","src","concat","defaultImage","alt","API_KEY","BASE_URL","getAllMovies","response","axios","abrupt","data","results","getSearchMovies","_callee2","query","_context2","_x","getSingleMovieApi","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}